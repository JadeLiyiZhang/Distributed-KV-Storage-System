version: '3.8'

services:
  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: raft-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - raft-network

  # Spring Boot API服务
  api-server:
    build:
      context: ./spring-boot-api
      dockerfile: Dockerfile
    container_name: raft-api-server
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - api_logs:/app/logs
    depends_on:
      - redis
    networks:
      - raft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: raft-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - raft-network
    restart: unless-stopped

  # Grafana监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: raft-grafana
    ports:
      - "3001:3000"  # 避免与前端端口冲突
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - raft-network
    restart: unless-stopped

volumes:
  redis_data:
  api_logs:
  prometheus_data:
  grafana_data:

networks:
  raft-network:
    driver: bridge 